from telegram import Update
from telegram.ext import ContextTypes, ConversationHandler
from keyboards import get_main_keyboard, get_delete_booking_keyboard
from database import (
    get_today_bookings, 
    get_tomorrow_bookings, 
    get_week_bookings,
    get_all_active_bookings,
    admin_delete_booking
)

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è –¥–∏–∞–ª–æ–≥–∞ —É–¥–∞–ª–µ–Ω–∏—è
SELECTING_BOOKING_TO_DELETE = 1

async def admin_today_bookings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è"""
    bookings = get_today_bookings()
    
    if not bookings:
        await update.message.reply_text("üì≠ –ù–∞ —Å–µ–≥–æ–¥–Ω—è –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç.")
        return
    
    text = f"üìÖ –ó–∞–ø–∏—Å–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è ({len(bookings)}):\n\n"
    
    for i, booking in enumerate(bookings, 1):
        text += (
            f"{i}. ‚è∞ {booking['–í—Ä–µ–º—è']} ‚Äî {booking.get('–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞', 'N/A')}\n"
            f"   üõû {booking['–†–∞–∑–º–µ—Ä –∫–æ–ª–µ—Å']}\n\n"
        )
    
    await update.message.reply_text(text)

async def admin_tomorrow_bookings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞"""
    bookings = get_tomorrow_bookings()
    
    if not bookings:
        await update.message.reply_text("üì≠ –ù–∞ –∑–∞–≤—Ç—Ä–∞ –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç.")
        return
    
    text = f"üìÜ –ó–∞–ø–∏—Å–∏ –Ω–∞ –∑–∞–≤—Ç—Ä–∞ ({len(bookings)}):\n\n"
    
    for i, booking in enumerate(bookings, 1):
        text += (
            f"{i}. ‚è∞ {booking['–í—Ä–µ–º—è']} ‚Äî {booking.get('–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞', 'N/A')}\n"
            f"   üõû {booking['–†–∞–∑–º–µ—Ä –∫–æ–ª–µ—Å']}\n\n"
        )
    
    await update.message.reply_text(text)

async def admin_week_bookings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–ø–∏—Å–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é"""
    bookings = get_week_bookings()
    
    if not bookings:
        await update.message.reply_text("üì≠ –ù–∞ —ç—Ç—É –Ω–µ–¥–µ–ª—é –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç.")
        return
    
    text = f"üìä –ó–∞–ø–∏—Å–∏ –Ω–∞ –Ω–µ–¥–µ–ª—é ({len(bookings)}):\n\n"
    
    current_date = None
    for i, booking in enumerate(bookings, 1):
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ –¥–∞—Ç–∞–º
        if current_date != booking['–î–∞—Ç–∞']:
            current_date = booking['–î–∞—Ç–∞']
            text += f"\nüìÖ {current_date}:\n"
        
        text += (
            f"{i}. ‚è∞ {booking['–í—Ä–µ–º—è']} ‚Äî {booking.get('–ò–º—è –∫–ª–∏–µ–Ω—Ç–∞', 'N/A')} "
            f"({booking['–†–∞–∑–º–µ—Ä –∫–æ–ª–µ—Å']})\n"
        )
    
    await update.message.reply_text(text)

async def admin_delete_start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ù–∞—á–∞–ª–æ –ø—Ä–æ—Ü–µ—Å—Å–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–ø–∏—Å–∏"""
    bookings = get_all_active_bookings()
    
    if not bookings:
        await update.message.reply_text("üì≠ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–µ—Ç.")
        return ConversationHandler.END
    
    await update.message.reply_text(
        f"üóë –í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø–∏—Å—å –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è ({len(bookings)} –∑–∞–ø–∏—Å–µ–π):",
        reply_markup=get_delete_booking_keyboard(bookings)
    )
    return SELECTING_BOOKING_TO_DELETE

async def admin_delete_booking_selected(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∑–∞–ø–∏—Å–∏"""
    query = update.callback_query
    await query.answer()
    
    if query.data == "admin_delete_back":
        await query.edit_message_text("‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.")
        return ConversationHandler.END
    
    # –ü–∞—Ä—Å–∏–º –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è –∏–∑ callback_data
    parts = query.data.replace("admin_delete_", "").split("_")
    date = parts[0]  # –î–î
    month = parts[1]  # –ú–ú
    year = parts[2]   # –ì–ì–ì–ì
    time = parts[3] + ":" + parts[4]  # –ß–ß:–ú–ú
    
    full_date = f"{date}.{month}.{year}"
    
    print(f"[DEBUG] –ü–∞—Ä—Å–∏–Ω–≥: date={full_date}, time={time}")
    
    success = admin_delete_booking(full_date, time)
    
    if success:
        await query.edit_message_text(
            f"‚úÖ –ó–∞–ø–∏—Å—å –Ω–∞ {full_date} –≤ {time} —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞."
        )
    else:
        await query.edit_message_text(
            "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
        )
    
    return ConversationHandler.END

async def admin_to_user_mode(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    await update.message.reply_text(
        "üë§ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π —Ä–µ–∂–∏–º.",
        reply_markup=get_main_keyboard()
    )